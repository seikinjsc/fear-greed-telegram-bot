name: Fear & Greed Bot

on:
  # Chạy theo lịch (4 lần/ngày)
  schedule:
    - cron: '0 1,5,9,13 * * *'  # 8h, 12h, 16h, 20h (UTC+7)
  
  # Cho phép chạy thủ công
  workflow_dispatch:
  
  # Chạy khi push code (để test)
  push:
    branches: [ main ]

jobs:
  run-bot:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v3
    
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: 📦 Install dependencies
    - name: 🔍 Debug secrets (chi tiết)
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        OWNER_CHAT_ID: ${{ secrets.OWNER_CHAT_ID }}
        GROUP_CHAT_ID: ${{ secrets.GROUP_CHAT_ID }}
      run: python debug_secrets.py
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: 📊 Run report and send to Telegram
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        OWNER_CHAT_ID: ${{ secrets.OWNER_CHAT_ID }}
        GROUP_CHAT_ID: ${{ secrets.GROUP_CHAT_ID }}
      run: |
        python -c "
        import os
        import asyncio
        from datetime import datetime
        from telegram import Bot
        from fear_greed_dashboard import FearGreedDashboard
        
        async def send_report():
            # Lấy biến môi trường
            bot_token = os.environ.get('TELEGRAM_BOT_TOKEN')
            owner_id = os.environ.get('OWNER_CHAT_ID')
            group_id = os.environ.get('GROUP_CHAT_ID')
            
            # Debug: Kiểm tra biến môi trường
            print('='*60)
            print('🔍 KIỂM TRA BIẾN MÔI TRƯỜNG')
            print('='*60)
            print(f'Bot Token: {\"✅ Có (\" + bot_token[:20] + \"...)\" if bot_token else \"❌ Không có\"}')
            print(f'Token Length: {len(bot_token) if bot_token else 0}')
            print(f'Owner ID: {\"✅ Có (\" + owner_id + \")\" if owner_id else \"❌ Không có\"}')
            print(f'Group ID: {\"✅ Có (\" + group_id + \")\" if group_id else \"❌ Không có\"}')
            print('='*60)
            print()
            
            if not bot_token or not bot_token.strip():
                print('❌ TELEGRAM_BOT_TOKEN không được thiết lập!')
                print('💡 Kiểm tra GitHub Secrets')
                print(f'📊 Debug: token=\"{bot_token}\"')
                return
            
            if not owner_id:
                print('❌ OWNER_CHAT_ID không được thiết lập!')
                print('💡 Kiểm tra GitHub Secrets')
                return
            
            # Khởi tạo dashboard
            print('🔄 Đang lấy dữ liệu...')
            dashboard = FearGreedDashboard()
            
            if not dashboard.fetch_data(limit=90):
                print('❌ Không thể lấy dữ liệu từ API')
                return
            
            print(f'✅ Đã lấy {len(dashboard.data)} bản ghi')
            print(f'📊 Giá trị: {dashboard.current_value} - {dashboard.current_classification_vi}')
            print()
            
            # Tạo báo cáo
            print('🎨 Đang tạo báo cáo...')
            report_file = 'report_temp.png'
            dashboard.create_full_report(save_path=report_file)
            
            if not os.path.exists(report_file):
                print('❌ Không thể tạo file báo cáo')
                return
            
            file_size = os.path.getsize(report_file) / 1024
            print(f'✅ Đã tạo báo cáo ({file_size:.1f} KB)')
            print()
            
            # Gửi Telegram
            print('📤 Đang gửi Telegram...')
            bot = Bot(token=bot_token)
            
            caption = f'''📊 **BÁO CÁO CHỈ SỐ TÂM LÝ THỊ TRƯỜNG**
⏰ {datetime.now().strftime(\"%d/%m/%Y %H:%M\")}

**Hiện tại:** {dashboard.current_value} - {dashboard.current_classification_vi}

🤖 Tự động từ GitHub Actions
#FearGreed #Crypto #AutoReport'''
            
            try:
                # Gửi cho owner
                with open(report_file, 'rb') as photo:
                    await bot.send_photo(
                        chat_id=owner_id,
                        photo=photo,
                        caption=caption,
                        parse_mode='Markdown'
                    )
                print(f'✅ Đã gửi cho owner: {owner_id}')
                
                # Gửi vào group nếu có
                if group_id and group_id != 'YOUR_GROUP_ID' and group_id.strip():
                    with open(report_file, 'rb') as photo:
                        await bot.send_photo(
                            chat_id=group_id,
                            photo=photo,
                            caption=caption,
                            parse_mode='Markdown'
                        )
                    print(f'✅ Đã gửi vào group: {group_id}')
                
            except Exception as e:
                print(f'❌ Lỗi khi gửi: {e}')
                raise
            
            # Xóa file tạm
            os.remove(report_file)
            print('🧹 Đã dọn dẹp file tạm')
            print()
            print('='*60)
            print('🎉 HOÀN TẤT!')
            print('='*60)
        
        # Chạy async function
        asyncio.run(send_report())
        "
    
    - name: ✅ Job completed
      if: success()
      run: echo "🎉 Báo cáo đã được gửi thành công!"
    
    - name: ❌ Job failed
      if: failure()
      run: |
        echo "❌ Có lỗi xảy ra!"
        echo "💡 Kiểm tra logs ở trên để debug"