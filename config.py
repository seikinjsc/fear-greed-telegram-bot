"""
config.py - C·∫•u h√¨nh cho Telegram Bot
"""

import os
from dotenv import load_dotenv

# Load environment variables
load_dotenv()


class Config:
    """C·∫•u h√¨nh cho bot"""
    
    # Telegram credentials
    BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN', 'YOUR_BOT_TOKEN_HERE')
    
    # Chat IDs
    OWNER_CHAT_ID = os.getenv('OWNER_CHAT_ID', 'YOUR_CHAT_ID')
    GROUP_CHAT_ID = os.getenv('GROUP_CHAT_ID', 'YOUR_GROUP_ID')
    
    # Ch·ªâ owner m·ªõi ƒë∆∞·ª£c d√πng bot
    ALLOWED_USERS = [int(OWNER_CHAT_ID)] if OWNER_CHAT_ID.isdigit() else []
    
    # API Settings
    API_URL = "https://api.alternative.me/fng/"
    API_TIMEOUT = 10
    API_RETRY = 3
    
    # File paths
    OUTPUT_DIR = "outputs"
    REPORTS_DIR = os.path.join(OUTPUT_DIR, "reports")
    GAUGES_DIR = os.path.join(OUTPUT_DIR, "gauges")
    DATA_DIR = os.path.join(OUTPUT_DIR, "data")
    LOGS_DIR = "logs"
    
    # Chart settings
    CHART_DPI = 150
    CHART_STYLE = 'dark_background'
    
    # Schedule settings
    SCHEDULE_TIMES = [
        "08:00",  # S√°ng s·ªõm
        "12:00",  # Tr∆∞a
        "16:00",  # Chi·ªÅu
        "20:00",  # T·ªëi
    ]
    
    # Message templates
    WELCOME_MESSAGE = """
ü§ñ **Ch√†o m·ª´ng ƒë·∫øn v·ªõi Fear & Greed Index Bot!**

üìä Bot n√†y gi√∫p b·∫°n theo d√µi ch·ªâ s·ªë S·ª£ h√£i & Tham lam c·ªßa th·ªã tr∆∞·ªùng Crypto

**C√°c l·ªánh c√≥ s·∫µn:**
/current - Xem ch·ªâ s·ªë hi·ªán t·∫°i
/gauge - Xem ƒë·ªìng h·ªì F&G
/report - B√°o c√°o ƒë·∫ßy ƒë·ªß
/history - L·ªãch s·ª≠ 30 ng√†y
/stats - Th·ªëng k√™ 90 ng√†y
/signal - T√≠n hi·ªáu mua/b√°n
/schedule - Qu·∫£n l√Ω l·ªãch g·ª≠i t·ª± ƒë·ªông
/help - Tr·ª£ gi√∫p

üë§ Ch·ªâ c√≥ ch·ªß s·ªü h·ªØu m·ªõi d√πng ƒë∆∞·ª£c bot n√†y.
"""
    
    HELP_MESSAGE = """
üìñ **H∆Ø·ªöNG D·∫™N S·ª¨ D·ª§NG**

**L·ªánh c∆° b·∫£n:**
‚Ä¢ `/current` - Xem gi√° tr·ªã F&G hi·ªán t·∫°i
‚Ä¢ `/gauge` - ƒê·ªìng h·ªì Fear & Greed
‚Ä¢ `/report` - B√°o c√°o chi ti·∫øt v·ªõi bi·ªÉu ƒë·ªì
‚Ä¢ `/history [days]` - L·ªãch s·ª≠ (m·∫∑c ƒë·ªãnh 30 ng√†y)
‚Ä¢ `/stats [days]` - Th·ªëng k√™ (m·∫∑c ƒë·ªãnh 90 ng√†y)
‚Ä¢ `/signal` - Ph√¢n t√≠ch t√≠n hi·ªáu mua/b√°n

**G·ª≠i v√†o nh√≥m:**
‚Ä¢ `/send_to_group` - G·ª≠i b√°o c√°o v√†o nh√≥m

**L·ªãch t·ª± ƒë·ªông:**
‚Ä¢ `/schedule` - Xem l·ªãch hi·ªán t·∫°i
‚Ä¢ `/schedule on` - B·∫≠t l·ªãch t·ª± ƒë·ªông
‚Ä¢ `/schedule off` - T·∫Øt l·ªãch t·ª± ƒë·ªông
‚Ä¢ `/schedule status` - Tr·∫°ng th√°i l·ªãch

**Th·ªùi gian g·ª≠i t·ª± ƒë·ªông:** 8h, 12h, 16h, 20h h√†ng ng√†y

üí° **Tips:** 
- Extreme Fear (0-25): C∆° h·ªôi mua t·ªët
- Extreme Greed (75-100): N√™n ch·ªët l·ªùi
"""
    
    @classmethod
    def create_directories(cls):
        """T·∫°o c√°c th∆∞ m·ª•c c·∫ßn thi·∫øt"""
        dirs = [
            cls.OUTPUT_DIR,
            cls.REPORTS_DIR,
            cls.GAUGES_DIR,
            cls.DATA_DIR,
            cls.LOGS_DIR
        ]
        for dir_path in dirs:
            os.makedirs(dir_path, exist_ok=True)
    
    @classmethod
    def validate_config(cls):
        """Ki·ªÉm tra c·∫•u h√¨nh"""
        errors = []
        
        if cls.BOT_TOKEN == 'YOUR_BOT_TOKEN_HERE':
            errors.append("‚ùå Ch∆∞a c·∫•u h√¨nh TELEGRAM_BOT_TOKEN")
        
        if cls.OWNER_CHAT_ID == 'YOUR_CHAT_ID':
            errors.append("‚ùå Ch∆∞a c·∫•u h√¨nh OWNER_CHAT_ID")
        
        if errors:
            print("\n".join(errors))
            print("\n‚ö†Ô∏è  Vui l√≤ng ch·ªânh s·ª≠a file .env v·ªõi th√¥ng tin c·ªßa b·∫°n!")
            return False
        
        return True


if __name__ == "__main__":
    print("üîß Ki·ªÉm tra c·∫•u h√¨nh...")
    Config.create_directories()
    print("‚úÖ ƒê√£ t·∫°o c√°c th∆∞ m·ª•c")
    
    if Config.validate_config():
        print("‚úÖ C·∫•u h√¨nh h·ª£p l·ªá!")
        print(f"üì± Bot Token: {Config.BOT_TOKEN[:20]}...")
        print(f"üë§ Owner Chat ID: {Config.OWNER_CHAT_ID}")
        if Config.GROUP_CHAT_ID != 'YOUR_GROUP_ID':
            print(f"üë• Group Chat ID: {Config.GROUP_CHAT_ID}")
    else:
        print("‚ùå C·∫•u h√¨nh ch∆∞a ƒë·∫ßy ƒë·ªß!")
